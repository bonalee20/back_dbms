-- 13) 유저 중 이태희를 태희로 이름 변경
UPDATE TBL_BUYER 
SET BUYER_NAME = '태희'
WHERE BUYER_NAME = '이태희'

SELECT *
FROM TBL_BUYER;

-- 14) 신상품 '나이키', '에어맥스 95', 가격 179000원, 재고 200개를 TBL_PRODUCT 테이블에 추가 
INSERT INTO TBL_PRODUCT 
VALUES( SEQ_PRODUCT.NEXTVAL, '나이키', '에어맥스 95', 179000, 200);

SELECT *
FROM TBL_PRODUCT;

-- 15) BUYER_NAME이 '철수'인 사람의 핸드폰 번호를 '010-0000-0000'으로 변경
UPDATE TBL_BUYER 
SET BUYER_PHONE = '010-7345-1578'
WHERE BUYER_NAME = '태희';

-- 16) PRODUCT_NAME이 '후드티'인 상품의 가격을 310000으로 인상
UPDATE TBL_PRODUCT 
SET PRODUCT_PRICE = '310000'
WHERE PRODUCT_NAME = '후드티';

SELECT *
FROM TBL_PRODUCT;

-- 19) '짱구'가 주문한 상품의 이름과 가격을 조회
SELECT TBP.PRODUCT_NAME , TBP.PRODUCT_PRICE 
FROM (
	SELECT *
	FROM TBL_ORDER
	WHERE BUYER_ID IN (
		SELECT ID
		FROM TBL_BUYER
		WHERE BUYER_NAME = '짱구')
)TBO
JOIN TBL_BUYER TBB
ON TBO.BUYER_ID = TBB.ID 
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID ;

-- 20) 각 구매자별로 주문한 상품의 총 개수를 조회 (구매자 이름, 주문 건수)
SELECT BUYER_ID, COUNT(BUYER_ID)
FROM TBL_ORDER
GROUP BY BUYER_ID;
--
SELECT *
FROM (
SELECT BUYER_ID, COUNT(BUYER_ID)
FROM TBL_ORDER
GROUP BY BUYER_ID
)TBO
JOIN TBL_BUYER TBB 
ON TBO.BUYER_ID = TBB.ID;
--
SELECT TBB.ID , COUNT(TBB.ID), TBB.BUYER_NAME 
FROM TBL_ORDER TBO
JOIN TBL_BUYER TBB
ON TBO.BUYER_ID = TBB.ID 
JOIN TBL_PRODUCT TBP 
ON TBO.PRODUCT_ID = TBP.ID 
GROUP BY TBB.ID, TBB.BUYER_NAME;


-- 21) 가장 많이 주문된 상품 3개의 이름과 주문 횟수를 내림차순으로 조회
SELECT PRODUCT_ID, COUNT(PRODUCT_ID)
FROM TBL_ORDER
GROUP BY PRODUCT_ID
ORDER BY COUNT(PRODUCT_ID) DESC;

SELECT *
FROM (
	SELECT PRODUCT_ID, COUNT(PRODUCT_ID)
	FROM TBL_ORDER
	GROUP BY PRODUCT_ID
	ORDER BY COUNT(PRODUCT_ID) DESC
)
FETCH FIRST 3 ROWS ONLY;


SELECT *
FROM (
	SELECT *
	FROM (
		SELECT PRODUCT_ID, COUNT(PRODUCT_ID)
		FROM TBL_ORDER
		GROUP BY PRODUCT_ID
		ORDER BY COUNT(PRODUCT_ID) DESC
	)
	FETCH FIRST 3 ROWS ONLY
)TBO
JOIN TBL_PRODUCT TBP 
ON TBP.ID = TBO.PRODUCT_ID;


-- 22) 여성 구매자들이 주문한 상품들의 평균 가격을 조회
SELECT *
FROM TBL_BUYER
WHERE BUYER_GENDER = '여';


SELECT AVG(TBP.PRODUCT_PRICE)
FROM TBL_ORDER TBO
JOIN (
	SELECT *
	FROM TBL_BUYER
	WHERE BUYER_GENDER = '여'
)TBB
ON TBO.BUYER_ID = TBB.ID
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID;

-- 23) 나이가 30세 이상인 남성 구매자들의 이름과 주소를 조회
-- 남자들만 오더
SELECT *
FROM TBL_ORDER
WHERE BUYER_ID IN (
	SELECT ID
	FROM TBL_BUYER
	WHERE BUYER_GENDER = '남'
);


SELECT BUYER_NAME, BUYER_ADDRESS 
FROM TBL_BUYER TBB
JOIN(
	SELECT BUYER_ID 
	FROM TBL_ORDER
	WHERE BUYER_ID IN (
		SELECT ID
		FROM TBL_BUYER
		WHERE BUYER_GENDER = '남'
	)
)TBO
ON TBB.ID = TBO.BUYER_ID;



-- 24) 재고가 100개 이하인 상품 목록을 브랜드명과 함께 조회
SELECT *
FROM TBL_PRODUCT
WHERE PRODUCT_STOCK <= 100;

-- 25) '서울시 강북구'에 사는 구매자들의 이름과 핸드폰 번호를 조회
SELECT BUYER_NAME, BUYER_ADDRESS 
FROM TBL_BUYER
WHERE BUYER_ADDRESS LIKE '서울시 강북구';


-- 26) 주문 상태가 '배송중'인 주문 내역과 해당 주문자의 이름, 상품명을 조회
SELECT *
FROM TBL_ORDER
WHERE ORDER_STATUS = '배송중'

SELECT TBO.ORDER_STATUS, TBB.BUYER_NAME, TBP.PRODUCT_NAME 
FROM TBL_ORDER TBO
JOIN TBL_BUYER TBB
ON TBO.BUYER_ID = TBB.ID 
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID 
WHERE TBO.ORDER_STATUS = '배송중';


-- 27) '훈이' 구매자가 주문한 상품들의 총 가격 합계 조회

SELECT *
FROM TBL_ORDER
WHERE BUYER_ID = (
	SELECT ID
	FROM TBL_BUYER
	WHERE BUYER_NAME = '훈이'
);

SELECT SUM(PRODUCT_PRICE)
FROM (
	SELECT *
	FROM TBL_ORDER
	WHERE BUYER_ID = (
		SELECT ID
		FROM TBL_BUYER
		WHERE BUYER_NAME = '훈이'
	)
)TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID;


-- 28) 상품별 기대 매출 조회
SELECT SUM(PRODUCT_PRICE)
FROM TBL_ORDER TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID ;

-- 29) '유리' 구매자의 주문 내역 중 가장 최근 주문한 상품의 이름과 주문일자를 조회
SELECT *
FROM TBL_ORDER
WHERE BUYER_ID IN (
	SELECT ID
	FROM TBL_BUYER
	WHERE BUYER_NAME = '유리'
)
ORDER BY ORDER_START_DATE DESC
FETCH FIRST 2 ROWS ONLY ;


SELECT ORDER_START_DATE, PRODUCT_NAME
FROM (
	SELECT *
	FROM TBL_ORDER
	WHERE BUYER_ID IN (
		SELECT ID
		FROM TBL_BUYER
		WHERE BUYER_NAME = '유리'
	)
	ORDER BY ORDER_START_DATE DESC
	FETCH FIRST 2 ROWS ONLY 
)TBO
JOIN TBL_PRODUCT TBP 
ON TBP.ID = TBO.PRODUCT_ID;
-- 30) 구매자별로 주문 완료 일자가 가장 빠른 주문 내역을 조회 ********************************************
-- 주문서 - 구매자
SELECT BUYER_ID,COUNT(BUYER_ID)
FROM TBL_ORDER to2
GROUP BY BUYER_ID;

SELECT BUYER_ID, ORDER_START_DATE 
FROM TBL_ORDER to2
GROUP BY BUYER_ID, ORDER_START_DATE
ORDER BY BUYER_ID;
--            ==================
SELECT *
FROM TBL_ORDER;

-- 아이디 8개 
SELECT BUYER_ID, COUNT(BUYER_ID)
FROM TBL_ORDER
GROUP BY BUYER_ID
ORDER BY BUYER_ID;



-- 최소 시간
SELECT BUYER_ID, MIN(ORDER_START_DATE) 
FROM TBL_ORDER
GROUP BY BUYER_ID;




-- 31) '스웨이드' 브랜드의 모든 상품 주문 건수를 조회
SELECT COUNT(ID)
FROM TBL_ORDER
WHERE PRODUCT_ID = (
	SELECT ID
	FROM TBL_PRODUCT tp 
	WHERE PRODUCT_BRAND LIKE '스웨이드'
);



-- 32) '봉미선' 구매자가 주문한 상품들 중 가격이 5만원 이상인 상품의 이름과 가격을 조회
SELECT *
FROM TBL_ORDER
WHERE BUYER_ID = (
	SELECT ID
	FROM TBL_BUYER
	WHERE BUYER_NAME = '봉미선'
);

SELECT PRODUCT_NAME, PRODUCT_PRICE
FROM(
	SELECT *
	FROM TBL_ORDER
	WHERE BUYER_ID = (
		SELECT ID
		FROM TBL_BUYER
		WHERE BUYER_NAME = '봉미선'
)
)TBO
JOIN TBL_PRODUCT TBP 
ON TBO.PRODUCT_ID = TBP.ID
WHERE PRODUCT_PRICE >= 50000;




-- 33) '수지' 구매자의 주소를 '서울시 송파구'로 수정

UPDATE TBL_BUYER 
SET BUYER_ADDRESS = '서울시 송파구'
WHERE BUYER_NAME = '수지';

SELECT *
FROM TBL_BUYER;


-- 34) 주문 상태가 '배송중'인 주문을 '배송완료'로 변경

UPDATE TBL_ORDER 
SET ORDER_STATUS = '배송완료'
WHERE ORDER_STATUS = '배송중';

SELECT *
FROM TBL_ORDER to2;


-- 35) 25세 이하인 구매자의 이름, 나이, 구매한 상품명 조회
	SELECT *
	FROM TBL_BUYER
	WHERE BUYER_AGE <= 25;

SELECT *
FROM TBL_ORDER to2 
WHERE ID IN (
	SELECT BUYER_ID 
	FROM TBL_BUYER
	WHERE BUYER_AGE <= 25
)

SELECT BUYER_NAME, BUYER_AGE, PRODUCT_NAME
FROM (
	SELECT *
	FROM TBL_ORDER to2 
	WHERE ID IN (
		SELECT BUYER_ID 
		FROM TBL_BUYER
		WHERE BUYER_AGE <= 25
	)
)TBO
JOIN TBL_BUYER TBB
ON TBB.ID = TBO.BUYER_ID
JOIN TBL_PRODUCT TBP
ON TBP.ID = TBO.PRODUCT_ID;


-- 36) 특정 상품(예: '볼캡')의 재고 수량을 0으로 변경
UPDATE TBL_PRODUCT 
SET PRODUCT_STOCK = '0'
WHERE PRODUCT_NAME= '볼캡';


-- 37) '아이더' 브랜드 상품을 주문한 구매자들의 이름과 연락처를 조회
SELECT *
FROM TBL_ORDER
WHERE PRODUCT_ID IN (
	SELECT ID
	FROM TBL_PRODUCT tp 
	WHERE PRODUCT_BRAND = '아이더'
);

------
SELECT BUYER_NAME, BUYER_PHONE
FROM (
	SELECT *
	FROM TBL_ORDER
	WHERE PRODUCT_ID IN (
		SELECT ID
		FROM TBL_PRODUCT tp 
		WHERE PRODUCT_BRAND = '아이더'
	)
)TBO
JOIN TBL_BUYER TBB 
ON TBO.BUYER_ID = TBB.ID ;


-- 38) '맹구' 구매자가 주문한 상품들의 가격 총합을 계산
;

SELECT SUM(PRODUCT_PRICE)
FROM (
	SELECT *
	FROM TBL_ORDER
	WHERE BUYER_ID IN (
		SELECT ID
		FROM TBL_BUYER
		WHERE BUYER_NAME = '맹구'
	)
)TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID ;


-- 39) 상품 할인 중 모든 30% 할인가격 조회
SELECT PRODUCT_PRICE *0.7
FROM TBL_PRODUCT;



-- 40) 구매자별로 주문한 상품 개수를 조회 ***************************************************************
--1시도
SELECT TBO.*, BUYER_NAME
FROM (
	SELECT BUYER_ID, COUNT(BUYER_ID)
	FROM TBL_ORDER
	GROUP BY BUYER_ID
)TBO
JOIN TBL_BUYER TBB
ON TBB.ID = TBO.BUYER_ID;




-- 41) '짱구' 구매자가 주문한 상품 중 가격이 가장 비싼 상품을 조회
--짱구가 구매한 상품

SELECT MAX(PRODUCT_PRICE)
FROM (
	SELECT *
	FROM TBL_ORDER
	WHERE BUYER_ID  = (
		SELECT ID 
		FROM TBL_BUYER
		WHERE BUYER_NAME = '짱구'
	)
)TBO
JOIN TBL_PRODUCT TBP
ON TBP.ID = TBO.PRODUCT_ID;


-- 42) '철수'와 '훈이'가 주문한 상품들을 조회하되 중복 없이 출력

SELECT PRODUCT_NAME
FROM (
	SELECT *
	FROM TBL_ORDER
	WHERE BUYER_ID IN (
		SELECT ID
		FROM TBL_BUYER
		WHERE BUYER_NAME = '철수' OR BUYER_NAME = '훈이'
	)
)TBO
JOIN TBL_PRODUCT TBP
ON TBO.PRODUCT_ID = TBP.ID
GROUP BY PRODUCT_NAME;



-- 43) '강북구'에 사는 여성 구매자들의 주문 내역을 조회
SELECT *
FROM  TBL_BUYER 
WHERE BUYER_ADDRESS LIKE '%강북구%'AND BUYER_GENDER = '여';

-- ORDER ONLY '강북구'에 사는 여성
SELECT *
FROM TBL_ORDER
WHERE BUYER_ID = (
	SELECT ID
	FROM  TBL_BUYER 
	WHERE BUYER_ADDRESS LIKE '%강북구%'AND BUYER_GENDER = '여'
);



-- 44) 구매자 이름과 그가 주문한 상품 이름, 주문 상태를 함께 출력
-- ORDER + NAME
SELECT BUYER_NAME, PRODUCT_NAME, ORDER_STATUS
FROM TBL_ORDER TBO
JOIN TBL_BUYER TBB
ON TBB.ID = TBO.BUYER_ID 
JOIN TBL_PRODUCT TBP 
ON TBP.ID = TBO.PRODUCT_ID;


-- 45) 모든 상품의 평균 가격을 구하고, 평균 이상 가격인 상품들을 조회
SELECT *
FROM TBL_PRODUCT
WHERE PRODUCT_PRICE > (
	SELECT AVG(PRODUCT_PRICE)
	FROM TBL_PRODUCT
);


-- 46) '스파오' 브랜드 상품의 재고를 50개 이하인 경우 재고를 100개로 수정
UPDATE TBL_PRODUCT 
SET PRODUCT_STOCK = '100'
WHERE PRODUCT_STOCK <= '50';

SELECT *
FROM TBL_PRODUCT tp ;

-- 보류
-- 17) BUYER_NAME이 '맹구'인 구매자의 정보를 TBL_BUYER에서 삭제 (단, 주문 이력이 있을 경우 삭제되지 않음)
-- 18) PRODUCT_NAME이 '텀블러'인 상품을 TBL_PRODUCT 테이블에서 삭제