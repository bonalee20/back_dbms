

--회원이 존재하고 회원은 여러 상품을 구매할 수 있습니다, MEMBER , MART , FORM
-- 데이터 베이스 시스템 을 만들어주세요


CREATE SEQUENCE SEQ_MEMBER;
CREATE TABLE TBL_MEMBER(
	ID NUMBER CONSTRAINT PK_MEMBER PRIMARY KEY,
	MEMBER_NAME VARCHAR(225) NOT NULL,
	MEMBER_PHONE VARCHAR(225)
);

CREATE SEQUENCE SEQ_MART;
CREATE TABLE TBL_MART(
	ID NUMBER CONSTRAINT PK_MART PRIMARY KEY,
	MART_PRODUCT VARCHAR2(225) NOT NULL,
	MART_PRICE NUMBER
);


CREATE SEQUENCE SEQ_FORM;
CREATE TABLE TBL_FORM(
	ID NUMBER CONSTRAINT PK_FORM PRIMARY KEY,
	MEMBER_ID NUMBER,
	MART_ID NUMBER,
	CONSTRAINT FK_FORM_MEMBER FOREIGN KEY(MEMBER_ID)
	REFERENCES TBL_MEMBER(ID),
	CONSTRAINT FK_FORM_MART FOREIGN KEY(MART_ID)
	REFERENCES TBL_MART(ID)
);

--상품 판매자 가 구매가에게 
-- 배송을 할 수 있는 기능 
-- 판매자 = 음료 이름 종류 크기 만든 날짜
-- 구매자 이름, 전화번호, 주소

CREATE SEQUENCE SEQ_SELLER;
CREATE TABLE 
TBL_SELLER(
	ID NUMBER CONSTRAINT PK_SELLER PRIMARY KEY,
	SELLER_PRODUCT_NAME VARCHAR2(225),
	SELLER_PRODUCT_TYPE VARCHAR2(225),
	SELLER_PRODUCT_SIZE NUMBER,
	SELLER_PROCDUCT_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);


CREATE SEQUENCE SEQ_BUYER;
CREATE TABLE TBL_BUYER(
	ID NUMBER CONSTRAINT PK_BUYER PRIMARY KEY,
	BUYER_NAME VARCHAR2(225),
	BUYER_PHONE VARCHAR2(225),
	BUYER_ADDRESS VARCHAR2(225)
);


CREATE SEQUENCE SEQ_DELIVERY;
CREATE TABLE TBL_DELIVERY(
	ID NUMBER CONSTRAINT PK_DELIVERY PRIMARY KEY,
	DELIVERY_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	DELIVERY_STATUS CHAR(10),
	SELLER_ID NUMBER,
	BUYER_ID NUMBER,
	CONSTRAINT FK_DELIVERY_SELLER FOREIGN KEY(SELLER_ID)
	REFERENCES TBL_SELLER(ID),
	CONSTRAINT FK_DELIVERY_BUYER FOREIGN KEY(BUYER_ID)
	REFERENCES TBL_BUYER(ID)
);


-- 사용자 (TBL_GOODS_USER)
-- 이름 연락처 주소
CREATE SEQUENCE SEQ_GOODS_USER;
CREATE TABLE TBL_GOODS_USER(
	ID NUMBER CONSTRAINT PK_GOODS_USER PRIMARY KEY,
	GOODS_USER_NAME VARCHAR2(225) NOT NULL,
	GOODS_USER_PHONE VARCHAR2(225),
	GOODS_USER_ADDRESS VARCHAR2(225)
);

--굿즈 (TBL_GOODS) NAME PRICE STOCK TIME/CONSTRAINT FK_DELIVERY_SELLER FOREIGN KEY(SELLER_ID)  REFERENCES TBL_SELLER(ID),
CREATE SEQUENCE SEQ_GOODS;
CREATE TABLE TBL_GOODS(
	ID NUMBER CONSTRAINT PK_GOODS PRIMARY KEY,
	GOODS_NAME VARCHAR2(225) NOT NULL,
	GOODS_PRICE NUMBER,
	GOODS_STOCK NUMBER,
	GOODS_SPENDEDTIME NUMBER
);

CREATE SEQUENCE SEQ_GIFTS;
CREATE TABLE TBL_GIFTS(
	ID NUMBER CONSTRAINT PK_GIFTS PRIMARY KEY,
	GOODS_USER_ID NUMBER,
	GOODS_ID NUMBER,
	CONSTRAINT FK_GIFTS_GOODS_USER FOREIGN KEY(GOODS_USER_ID)
	REFERENCES TBL_GOODS_USER(ID),
	CONSTRAINT FK_GIFTS_GOODS FOREIGN KEY(GOODS_ID)
	REFERENCES TBL_GOODS(ID)
);

/*
1 요구사항 표 아이들, = 이름 나이 성멸
		학부모 = 이름, 나이, 주소, 전화번호, 성별이
		체험학습 = 제목, 체험학습 내용, 이벤트 이미지 
		폼 = 아이 id 학부모id 체험학습 id
   유치원을 하려고 하는데, 아이들이 체험학습 프로그램을 신청해야 합니다.
   아이들 정보는 이름, 나이, 성별이 필요하고 학부모는 이름, 나이, 주소, 전화번호, 성별이 필요해요
   체험학습은 체험학습 제목, 체험학습 내용, 이벤트 이미지 여러 장이 필요합니다.
   아이들은 여러 번 체험학습에 등록할 수 있어요.
   		아이들 = 이름 나이 성멸
		학부모 = 이름, 나이, 주소, 전화번호, 성별이
		체험학습 = 제목, 체험학습 내용, 이벤트 이미지 
		폼 = 아이 id 학부모id 체험학습 id
*/

CREATE SEQUENCE SEQ_CHILDREN;
CREATE TABLE TBL_CHILDREN(
	ID NUMBER CONSTRAINT PK_CHILDREN PRIMARY KEY,
	CHILDREN_NAME VARCHAR2(225) NOT NULL,
	CHILDREN_AGE NUMBER,
	CHILDREN_GENDER CHAR(5)
	);

CREATE SEQUENCE SEQ_PARENT;
CREATE TABLE TBL_PARENT(
	ID NUMBER CONSTRAINT PK_PARENT PRIMARY KEY,
	PARENT_NAME VARCHAR(225),
	PARENT_AGE NUMBER,
	PARENT_PHONE VARCHAR(225),
	PARENT_GENDER CHAR(5),
	CHILDREN_ID NUMBER,
	CONSTRAINT FK_PARENT_CHILDREN FOREIGN KEY(CHILDREN_ID)
	REFERENCES TBL_CHILDREN(ID)
	);
--학습 = 제목, 체험학습 내용, 이벤트 이미지 
CREATE SEQUENCE SEQ_TRIP;
CREATE TABLE TBL_TRIP(
	
	TRIP_NAME VARCHAR2(225),
	TRIP_CONTENT VARCHAR2(225),
	TRIP_EVENT_PHOTO VARCHAR2(225)
	);


CREATE SEQUENCE SEQ_IMAGE;
CREATE TABLE TBL_TRIP(
	

);
--폼 = 아이 id 학부모id 체험학습 id
CREATE SEQUENCE SEQ_FORM;
CREATE TABLE TBL_FORM(
	CHILDREN_ID NUMBER,
	PARENT_ID NUMBER,
	TRIP_ID NUMBER,
	CONSTRAINT FK_FORM_CHILDREN FOREIGN KEY(CHILDREN_ID)
	REFERENCES TBL_CHILDREN(ID),
	CONSTRAINT FK_FORM_PARENT FOREIGN KEY(PARENT_ID)
	REFERENCES TBL_PARENT(ID)
	);


/*
   2 요구사항
   유치원을 하려고 하는데, 아이들이 체험학습 프로그램을 신청해야 합니다.
   아이들 정보는 이름, 나이, 성별이 필요하고 학부모는 이름, 나이, 주소, 전화번호, 성별이 필요해요
   체험학습은 체험학습 제목, 체험학습 내용, 이벤트 이미지 여러 장이 필요합니다.
   아이들은 여러 번 체험학습에 등록할 수 있어요.
*/

-- 아이 
-- 이름, 나이, 성별
CREATE SEQUENCE SEQ_CHILD;
CREATE TABLE TBL_CHILD(
   ID NUMBER CONSTRAINT PK_CHILD PRIMARY KEY,
   CHILD_NAME VARCHAR2(255) NOT NULL,
   CHILD_AGE NUMBER,
   CHILD_GENDER CHAR(5)
);

-- 부모 FK
-- 이름, 나이, 주소, 전화번호, 성별
CREATE SEQUENCE SEQ_PARENT;
CREATE TABLE TBL_PARENT(
   ID NUMBER CONSTRAINT PK_PARENT PRIMARY KEY,
   PARENT_NAME VARCHAR2(255) NOT NULL,
   PARENT_AGE NUMBER,
   PARENT_ADDRESS VARCHAR2(255),
   PARENT_PHONE VARCHAR2(255) NOT NULL,
   PARNET_GENDER CHAR(5),
   CHILD_ID NUMBER,
   CONSTRAINT FK_PARENT_CHILD FOREIGN KEY(CHILD_ID)
   REFERENCES TBL_CHILD(ID)
);

-- 체험학습
-- 제목, 체험학습 내용
CREATE SEQUENCE SEQ_FIELD_TRIP;
CREATE TABLE TBL_FIELD_TRIP(
   ID NUMBER CONSTRAINT PK_FIELD_TRIP PRIMARY KEY,
   FIELD_TRIP_TITLE VARCHAR2(255),
   FIELD_TRIP_CONTENT VARCHAR2(255),
   FIELD_TRIP_NUMBER NUMBER
);

-- 체험학습 이미지 FK
CREATE SEQUENCE SEQ_FIELD_TRIP_FILE;
CREATE TABLE TBL_FIELD_TRIP_FILE(
   ID NUMBER CONSTRAINT PK_FIELD_TRIP_FILE PRIMARY KEY,
   FIELD_TRIP_FILE_NAME VARCHAR2(255),
   FIELD_TRIP_FILE_PATH VARCHAR2(255),
   FIELD_TRIP_ID NUMBER,
   CONSTRAINT FK_FIELD_TRIP_FILE_FIELD_TRIP FOREIGN KEY(FIELD_TRIP_ID)
   REFERENCES TBL_FIELD_TRIP(ID)
);
-- 신청 FK
CREATE SEQUENCE SEQ_APPLY;
CREATE TABLE TBL_APPLY(
   ID NUMBER CONSTRAINT PK_APPLY PRIMARY KEY,
   APPLY_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   CHILD_ID NUMBER,
   FIELD_TRIP_ID NUMBER,
   CONSTRAINT FK_APPLY_CHILD FOREIGN KEY(CHILD_ID)
   REFERENCES TBL_CHILD(ID),
   CONSTRAINT FK_APPLY_FIELD_TRIP FOREIGN KEY(FIELD_TRIP_ID)
   REFERENCES TBL_FIELD_TRIP(ID)
);

/*

3 요구사항

안녕하세요, 광고 회사를 운영하려고 준비중인 사업가입니다.
광고주는 기업이고 기업 정보는 이름, 주소, 대표번호, 기업종류(스타트업, 중소기업, 중견기업, 대기업)입니다.
광고는 제목, 내용이 있고 기업은 여러 광고를 신청할 수 있습니다.
기업이 광고를 선택할 때에는 카테고리로 선택하며, 대카테고리, 중카테고리, 소카테고리가 있습니다.

*/

CREATE SEQUENCE SEQ_COMPANY;
CREATE TABLE TBL_COMPANY(
	ID NUMBER CONSTRAINT PK_COMPANY PRIMARY KEY,
	COMPANY_NAME VARCHAR2(225),
	COMPANY_ADDRESS VARCHAR2(225),
	COMPANY_PHONE VARCHAR2(225)
	);


CREATE SEQUENCE SEQ_COMPANY_TYPE;
CREATE TABLE TBL_COMPANY_TYPE(
	ID NUMBER CONSTRAINT PK_COMPANY_TYPE PRIMARY KEY,
	COMPANY_TYPE VARCHAR2(225),
	COMPANY_ID NUMBER,
	CONSTRAINT FK_COMPANY_TYPE_COMPANY FOREIGN KEY(COMPANY_ID)
	REFERENCES TBL_COMPANY(ID)
);

--광고는 제목, 내용
CREATE SEQUENCE SEQ_AD;
CREATE TABLE TBL_AD(
	ID NUMBER CONSTRAINT PK_AD PRIMARY KEY,
	AD_NAME VARCHAR2(225),
	AD_CONTENT VARCHAR2(225),
	COMPANY_ID NUMBER,
	CONSTRAINT FK_AD_COMPANY FOREIGN KEY(COMPANY_ID)
	REFERENCES TBL_COMPANY(ID)
);

--기업이 광고를 선택할 때에는 카테고리로 선택하며, 대카테고리, 중카테고리, 소카테고리가
CREATE SEQUENCE SEQ_CATEGORY;
CREATE TABLE TBL_CATEGORY(
	ID NUMBER CONSTRAINT PK_CATEGORY PRIMARY KEY,
	CATEGORY_TYPE VARCHAR2(225),
	COMPANY_ID NUMBER,
	CONSTRAINT FK_CATEGORY_COMPANY FOREIGN KEY(COMPANY_ID)
	REFERENCES TBL_COMPANY(ID)
);

CREATE SEQUENCE SEQ_FORM;
CREATE TABLE TBL_FORM(
	ID NUMBER CONSTRAINT PK_FORM PRIMARY KEY,
	COMPANY_ID NUMBER,
	AD_ID NUMBER,
	CONSTRAINT FK_FORM_COMPANY FOREIGN KEY(COMPANY_ID)
	REFERENCES TBL_COMPANY(ID),
	CONSTRAINT FK_FORM_AD FOREIGN KEY(AD_ID)
	REFERENCES TBL_AD(ID)
);


--=================================

/*
   요구사항
   음료수 판매 업체입니다. 음료수마다 당첨번호가 있습니다. 
   음료수의 당첨번호는 1개이고 당첨자의 정보를 알아야 상품을 배송할 수 있습니다.
   당첨 번호마다 당첨 상품이 있고, 당첨 상품이 배송 중인지 배송 완료인지 구분해야 합니다.
*/

-- 사용자 1
CREATE SEQUENCE SEQ_USER;
CREATE TABLE TBL_USER(
   ID NUMBER CONSTRAINT PK_USER PRIMARY KEY,
   USER_NAME VARCHAR2(255) NOT NULL,
   USER_ADDRESS VARCHAR2(255) NOT NULL,
   USER_PHONE VARCHAR(255) NOT NULL
);

-- 음료수 1
CREATE SEQUENCE SEQ_SOFT_DRINK;
CREATE TABLE TBL_SOFT_DRINK(
   ID NUMBER CONSTRAINT PK_SOFT_DRINK PRIMARY KEY,
   SOFT_DRINK_NAME VARCHAR2(255) NOT NULL UNIQUE,
   SOFT_DRINK_PRICE NUMBER DEFAULT 0,
   SOFT_DRINK_STOCK NUMBER DEFAULT 999,
   SOFT_DRINK_MAKE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 상품 1
CREATE SEQUENCE SEQ_PRODUCT;
CREATE TABLE TBL_PRODUCT(
   ID NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
   PRODUCT_NAME VARCHAR(255) NOT NULL UNIQUE,
   PRODUCT_STOCK NUMBER DEFAULT 999
);

-- 주문 - FK사용자, FK음료수
CREATE SEQUENCE SEQ_ORDER;
CREATE TABLE TBL_ORDER(
   ORDER_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   USER_ID NUMBER,
   SOFT_DRINK_ID NUMBER,
   CONSTRAINT FK_ORDER_USER FOREIGN KEY(USER_ID)
   REFERENCES TBL_USER(ID),
   CONSTRAINT FK_ORDER_SOFT_DRINK FOREIGN KEY(SOFT_DRINK_ID)
   REFERENCES TBL_SOFT_DRINK(ID)
);

-- 운 FK - 음료수
CREATE SEQUENCE SEQ_LOTTERY;
CREATE TABLE TBL_LOTTERY(
   ID NUMBER CONSTRAINT PK_LOTTERY PRIMARY KEY,
   SOFT_DRINK_ID NUMBER,
   CONSTRAINT FK_LOTTERY_SOFT_DRINK FOREIGN KEY(SOFT_DRINK_ID)
   REFERENCES TBL_SOFT_DRINK(ID)
);

-- 추첨 FK운, FK상품
CREATE SEQUENCE SEQ_CIRULATION;
CREATE TABLE TBL_CIRULATION(
   ID NUMBER CONSTRAINT PK_CIRULATION PRIMARY KEY,
   LOTTERY_ID NUMBER,
   PRODUCT_ID NUMBER,
   CONSTRAINT FK_CIRULATION_LOTTERY FOREIGN KEY(LOTTERY_ID)
   REFERENCES TBL_LOTTERY(ID),
   CONSTRAINT FK_CIRULATION_PRODUCT FOREIGN KEY(PRODUCT_ID)
   REFERENCES TBL_PRODUCT(ID)
);

-- 배송 FK상품, FK사용자
CREATE SEQUENCE SEQ_DELIVERY;
CREATE TABLE TBL_DELIVERY(
   ID NUMBER CONSTRAINT PK_DELIVERY PRIMARY KEY,
   PRODUCT_ID NUMBER,
   USER_ID NUMBER,
   CONSTRAINT FK_DELIVERY_PRODUCT FOREIGN KEY(PRODUCT_ID)
   REFERENCES TBL_PRODUCT(ID),
   CONSTRAINT FK_DELIVERY_USER FOREIGN KEY(USER_ID)
   REFERENCES TBL_USER(ID)
);




-- 5
--회사: 기업 이름, 주소 대표번호
--멤버: 이름, 주소, 전화번호
--상품: 회사 FK 
--카드: 회원 FK
--주문: 회원 FK, 상품 FK
--결제: 주문 FK, 카드 FK

/*
요구사항
   이커머스 창업 준비중입니다. 
   기업과 사용자 간 거래를 위해 기업의 정보와 사용자 정보가 필요합니다.
   기업의 정보는 기업 이름, 주소, 대표번호가 있고
   사용자 정보는 이름, 주소, 전화번호가 있습니다. 
   결제 시 사용자 정보와 기업의 정보, 결제한 카드의 정보 모두 필요하며,
   상품의 정보도 필요합니다. 상품의 정보는 이름, 가격, 재고입니다.
   사용자는 등록한 카드의 정보를 저장할 수 있으며, 
   카드의 정보는 카드번호, 카드사, 회원 정보가 필요합니다.
*/


CREATE SEQUENCE SEQ_COMPANY;
CREATE TABLE TBL_COMPANY(
	ID NUMBER CONSTRAINT PK_COMPANY PRIMARY KEY,
	COMPANY_NAME VARCHAR2(225) NOT NULL,
	COMPANY_ADDRESS VARCHAR2(225),
	COMPANY_PHONE VARCHAR(225)

);

CREATE SEQUENCE SEQ_PRODUCT;
CREATE TABLE TBL_PRODUCT(
	ID NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
	PRODUCT_NAME VARCHAR2(225) NOT NULL,
	PRODUCT_STOCK NUMBER DEFAULT 0,
	PRODUCT_PRICE NUMBER NOT NULL
);



CREATE SEQUENCE SEQ_CARD;
CREATE TABLE TBL_CARD(
		ID NUMBER CONSTRAINT PK_CARD PRIMARY KEY,
		CARD_NAME VARCHAR2(255),

);








